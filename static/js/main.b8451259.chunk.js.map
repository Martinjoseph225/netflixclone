{"version":3,"sources":["constants/constants.js","axios.js","Components/NavBar/Banner/Banner.js","Components/NavBar/NavBar.js","Components/RowPost/RowPost.js","Urls.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","imageUrl","instance","axios","create","baseURL","Banner","useState","movie","setMovie","useEffect","get","then","response","x","Math","floor","random","console","log","data","results","style","backgroundImage","backdrop_path","className","name","title","overview","NavBar","src","alt","RowPost","props","movies","setMovies","urlId","setUrlId","url","catch","err","map","obj","onClick","id","length","isSmall","opts","height","width","playerVars","autoplay","videoId","key","originals","action","comedy","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8451259.chunk.js","sourcesContent":["export const baseUrl = \"https://api.themoviedb.org/3\";\r\nexport const API_KEY = \"e132982c82cc5493f92db880d583d234\";\r\nexport const imageUrl = \"https://image.tmdb.org/t/p/original\";\r\n","import axios from \"axios\";\r\nimport { baseUrl } from \"./constants/constants\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: baseUrl,\r\n});\r\n\r\nexport default instance;\r\n","import \"./Banner.css\";\r\nimport { API_KEY, imageUrl } from \"../../../constants/constants\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"../../../axios\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState();\r\n  useEffect(() => {\r\n    axios\r\n      .get(`trending/all/week?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => {\r\n        const x = Math.floor(Math.random() * 20 + 1);\r\n        console.log(response.data.results[x]);\r\n        setMovie(response.data.results[x]);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${movie ? imageUrl + movie.backdrop_path : \"\"})`,\r\n      }}\r\n      className=\"banner\"\r\n    >\r\n      <div className=\"content\">\r\n        <h1 className=\"title\">\r\n          {movie ? (movie.name ? movie.name : movie.title) : \"\"}\r\n        </h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"button\">Play</button>\r\n          <button className=\"button\">My List</button>\r\n        </div>\r\n        <h1 className=\"descrption\">{movie ? movie.overview : \"\"}</h1>\r\n      </div>\r\n      <div className=\"fade_bottom\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <img\r\n        className=\"logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n        alt=\"netflix\"\r\n      />\r\n      <img\r\n        className=\"avatar\"\r\n        src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n        alt=\"Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./RowPost.css\";\r\nimport axios from \"../../axios\";\r\nimport { imageUrl, API_KEY } from \"../../constants/constants\";\r\nimport YouTube from \"react-youtube\";\r\nfunction RowPost(props) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [urlId, setUrlId] = useState(\"\");\r\n  useEffect(() => {\r\n    axios\r\n      .get(props.url)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setMovies(response.data.results);\r\n      })\r\n      .catch((err) => {\r\n        // alert(\"Network error\");\r\n      });\r\n  }, []);\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.co/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleMovie = (id) => {\r\n    console.log(id);\r\n    axios\r\n      .get(`movie/${id}/videos?api_key=${API_KEY}&language=en-US`)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        if (response.data.results.length !== 0) {\r\n          setUrlId(response.data.results[0]);\r\n        } else {\r\n          console.log(\"array empty\");\r\n        }\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {movies.map((obj) => (\r\n          <img\r\n            onClick={() => handleMovie(obj.id)}\r\n            className={props.isSmall ? \"smallposter\" : \"poster\"}\r\n            src={`${imageUrl + obj.backdrop_path}`}\r\n            alt=\"poster\"\r\n          />\r\n        ))}\r\n      </div>\r\n      {urlId && <YouTube opts={opts} videoId={urlId.key} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RowPost;\r\n","import { API_KEY } from \"./constants/constants\";\r\n\r\nexport const originals = `discover/tv?api_key=${API_KEY}&with_networks=213`;\r\nexport const action = `discover/movie?api_key=${API_KEY}&with_genres=28`;\r\n\r\nexport const comedy = `discover/movie?api_key=${API_KEY}&with_genres=35`;\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Banner from \"./Components/NavBar/Banner/Banner\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport RowPost from \"./Components/RowPost/RowPost\";\nimport { action, originals, comedy } from \"./Urls\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <RowPost url={originals} title=\"Netfilx Originals\" />\n      <RowPost url={action} title=\"Action \" isSmall />\n      <RowPost url={comedy} title=\"Comedy\" isSmall />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}